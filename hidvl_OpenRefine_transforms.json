[
  {
    "op": "core/column-move",
    "columnName": "NOID",
    "index": 0,
    "description": "Move column NOID to position 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Language_Note",
    "expression": "grel:forNonBlank(cells[\"Language_List\"].value,nonblank,\"In \" + cells[\"Language_List\"].value.replace(\",\",\", \") +\".\",\"In \" + cells[\"Language_List\"].value.replace(\",\",\", \") + \". \" + value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language_Note using expression grel:forNonBlank(cells[\"Language_List\"].value,nonblank,\"In \" + cells[\"Language_List\"].value.replace(\",\",\", \") +\".\",\"In \" + cells[\"Language_List\"].value.replace(\",\",\", \") + \". \" + value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language_List",
    "expression": "grel:value.replace(\"English\",\"eng\").replace(\"Spanish\",\"spa\").replace(\"Portuguese\",\"por\").replace(\"Mapudungun\",\"arn\").replace(\",\",\"|\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language_List using expression grel:value.replace(\"English\",\"eng\").replace(\"Spanish\",\"spa\").replace(\"Portuguese\",\"por\").replace(\"Mapudungun\",\"arn\").replace(\",\",\"|\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Series_Title",
    "expression": "grel:value + \" collection\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Series_Title using expression grel:value + \" collection\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Series_Title",
          "expression": "value",
          "columnName": "Series_Title",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "\"Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance\" collection",
                "l": "\"Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance\" collection"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Meeting_Information",
    "expression": "grel:cells[\"Series_Title\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Meeting_Information using expression grel:cells[\"Series_Title\"].value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Series_Title",
    "expression": "value",
    "edits": [
      {
        "from": [
          "\"Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance\" collection"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection"
      }
    ],
    "description": "Mass edit cells in column Series_Title"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Series_Title",
          "expression": "value",
          "columnName": "Series_Title",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection",
                "l": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Meeting_Information",
    "expression": "value",
    "edits": [
      {
        "from": [
          "\"Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance\" collection"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance"
      }
    ],
    "description": "Mass edit cells in column Meeting_Information"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Series_Title",
          "expression": "value",
          "columnName": "Series_Title",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection",
                "l": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Meeting_Information",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hemispheric Institute Encuentro (10th : 2016 : Santiago, Chile). eXcéntrico: dissidence, sovereignties, performance"
      }
    ],
    "description": "Mass edit cells in column Meeting_Information"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Meeting_Information",
          "expression": "value",
          "columnName": "Meeting_Information",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Hemispheric Institute Encuentro (10th : 2016 : Santiago, Chile). eXcéntrico: dissidence, sovereignties, performance",
                "l": "Hemispheric Institute Encuentro (10th : 2016 : Santiago, Chile). eXcéntrico: dissidence, sovereignties, performance"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Series_Title",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column Series_Title"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Subjects_653",
    "expression": "grel:value.replace(\"|,\",\"|\").chomp(\"|\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subjects_653 using expression grel:value.replace(\"|,\",\"|\").chomp(\"|\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Date_of_Production",
    "expression": "grel:value.smartSplit()[1]",
    "onError": "set-to-blank",
    "newColumnName": "Year_of_Production",
    "columnInsertIndex": 5,
    "description": "Create column Year_of_Production at index 5 based on column Date_of_Production using expression grel:value.smartSplit()[1]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Date_of_Production",
    "expression": "grel:value.match(/(.*), (.*)/).reverse().join(\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date_of_Production using expression grel:value.match(/(.*), (.*)/).reverse().join(\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Artist_Bio",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Artist_Bio using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Date_of_Production",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date_of_Production using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Copyright_Contact",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Copyright_Contact using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language_Note",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language_Note using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Location_Venue",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Location_Venue using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Main_Production_Credits",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Main_Production_Credits using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Summary",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Summary using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Title",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Title using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Rights_Holder",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Rights_Holder using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Participants",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Participants using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Worktypes",
    "expression": "grel:value.replace(\",\",\"||\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Worktypes using expression grel:value.replace(\",\",\"||\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "Worktypes",
    "keyColumnName": "NOID",
    "mode": "separator",
    "separator": "||",
    "regex": false,
    "description": "Split multi-valued cells in column Worktypes"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Subjects_653",
          "expression": "value",
          "columnName": "Subjects_653",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "Worktypes",
          "expression": "value",
          "columnName": "Worktypes",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "Worktypes",
    "expression": "grel:forEach(cross(cell,\"Event types Grid view April 2020\",\"Event_type\"),v,v.cells[\"Source\"].value).uniques().sort().join(', ')",
    "onError": "set-to-blank",
    "newColumnName": "Source",
    "columnInsertIndex": 23,
    "description": "Create column Source at index 23 based on column Worktypes using expression grel:forEach(cross(cell,\"Event types Grid view April 2020\",\"Event_type\"),v,v.cells[\"Source\"].value).uniques().sort().join(', ')"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Language_List",
          "expression": "value",
          "columnName": "Language_List",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "Series_Title",
          "expression": "value",
          "columnName": "Series_Title",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "NOID",
    "expression": "grel:forEach(cross(cell,\"noid runtimes_september2022\",\"Column 1\"),v,v.cells[\"Column 2\"].value).uniques().sort().join(', ')",
    "onError": "set-to-blank",
    "newColumnName": "Column 2",
    "columnInsertIndex": 1,
    "description": "Create column Column 2 at index 1 based on column NOID using expression grel:forEach(cross(cell,\"noid runtimes_september2022\",\"Column 1\"),v,v.cells[\"Column 2\"].value).uniques().sort().join(', ')"
  },
  {
    "op": "core/column-move",
    "columnName": "Column 2",
    "index": 16,
    "description": "Move column Column 2 to position 16"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 2",
    "guessCellType": false,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": ":",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Column 2 by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 2 3",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 2 3 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 2 3",
    "expression": "grel:value.round()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 2 3 using expression grel:value.round()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Column 2 1",
    "expression": "grel:toNumber(value) * 60",
    "onError": "set-to-blank",
    "newColumnName": "Hours_Converted",
    "columnInsertIndex": 17,
    "description": "Create column Hours_Converted at index 17 based on column Column 2 1 using expression grel:toNumber(value) * 60"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Column 2 2",
    "expression": "join ([coalesce(cells['Column 2 2'].value,''),coalesce(cells['Column 2 3'].value,'')],'.')",
    "onError": "keep-original",
    "newColumnName": "Minutes_Rounded",
    "columnInsertIndex": 19,
    "description": "Create column Minutes_Rounded at index 19 based on column Column 2 2 using expression join ([coalesce(cells['Column 2 2'].value,''),coalesce(cells['Column 2 3'].value,'')],'.')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Minutes_Rounded",
    "expression": "grel:value.toNumber().round()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Minutes_Rounded using expression grel:value.toNumber().round()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Hours_Converted",
    "expression": "grel:value+cells[\"Minutes_Rounded\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Hours_Converted using expression grel:value+cells[\"Minutes_Rounded\"].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Hours_Converted",
    "expression": "grel:\"000\"[0,3-value.length()] + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Hours_Converted using expression grel:\"000\"[0,3-value.length()] + value"
  },
[
  {
    "op": "core/column-move",
    "columnName": "NOID",
    "index": 0,
    "description": "Move column NOID to position 0"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Language_Note",
    "expression": "grel:forNonBlank(cells[\"Language_List\"].value,nonblank,\"In \" + cells[\"Language_List\"].value.replace(\",\",\", \") +\".\",\"In \" + cells[\"Language_List\"].value.replace(\",\",\", \") + \". \" + value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language_Note using expression grel:forNonBlank(cells[\"Language_List\"].value,nonblank,\"In \" + cells[\"Language_List\"].value.replace(\",\",\", \") +\".\",\"In \" + cells[\"Language_List\"].value.replace(\",\",\", \") + \". \" + value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language_List",
    "expression": "grel:value.replace(\"English\",\"eng\").replace(\"Spanish\",\"spa\").replace(\"Portuguese\",\"por\").replace(\"Mapudungun\",\"arn\").replace(\",\",\"|\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language_List using expression grel:value.replace(\"English\",\"eng\").replace(\"Spanish\",\"spa\").replace(\"Portuguese\",\"por\").replace(\"Mapudungun\",\"arn\").replace(\",\",\"|\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Series_Title",
    "expression": "grel:value + \" collection\"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Series_Title using expression grel:value + \" collection\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Series_Title",
          "expression": "value",
          "columnName": "Series_Title",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "\"Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance\" collection",
                "l": "\"Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance\" collection"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Meeting_Information",
    "expression": "grel:cells[\"Series_Title\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Meeting_Information using expression grel:cells[\"Series_Title\"].value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Series_Title",
    "expression": "value",
    "edits": [
      {
        "from": [
          "\"Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance\" collection"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection"
      }
    ],
    "description": "Mass edit cells in column Series_Title"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Series_Title",
          "expression": "value",
          "columnName": "Series_Title",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection",
                "l": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Meeting_Information",
    "expression": "value",
    "edits": [
      {
        "from": [
          "\"Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance\" collection"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance"
      }
    ],
    "description": "Mass edit cells in column Meeting_Information"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Series_Title",
          "expression": "value",
          "columnName": "Series_Title",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection",
                "l": "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Meeting_Information",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hemispheric Institute Encuentro (10th : 2016 : Santiago, Chile). eXcéntrico: dissidence, sovereignties, performance"
      }
    ],
    "description": "Mass edit cells in column Meeting_Information"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Meeting_Information",
          "expression": "value",
          "columnName": "Meeting_Information",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Hemispheric Institute Encuentro (10th : 2016 : Santiago, Chile). eXcéntrico: dissidence, sovereignties, performance",
                "l": "Hemispheric Institute Encuentro (10th : 2016 : Santiago, Chile). eXcéntrico: dissidence, sovereignties, performance"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Series_Title",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hemispheric Institute Encuentro: eXcéntrico: dissidence, sovereignties, performance collection"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column Series_Title"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Subjects_653",
    "expression": "grel:value.replace(\"|,\",\"|\").chomp(\"|\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subjects_653 using expression grel:value.replace(\"|,\",\"|\").chomp(\"|\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Date_of_Production",
    "expression": "grel:value.match(/(.*), (.*)/).reverse().join(\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date_of_Production using expression grel:value.match(/(.*), (.*)/).reverse().join(\" \")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Date_of_Production",
    "expression": "grel:value.find(/^\\d{4}/)[0]",
    "onError": "set-to-blank",
    "newColumnName": "Year_of_Production",
    "columnInsertIndex": 5,
    "description": "Create column Year_of_Production at index 5 based on column Date_of_Production using expression grel:value.find(/^\\d{4}/)[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Artist_Bio",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Artist_Bio using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Date_of_Production",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date_of_Production using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Copyright_Contact",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Copyright_Contact using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Language_Note",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language_Note using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Location_Venue",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Location_Venue using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Main_Production_Credits",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Main_Production_Credits using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Summary",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Summary using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Title",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Title using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Rights_Holder",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Rights_Holder using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Participants",
    "expression": "grel:value.chomp(\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Participants using expression grel:value.chomp(\".\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Worktypes",
    "expression": "grel:value.replace(\",\",\"||\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Worktypes using expression grel:value.replace(\",\",\"||\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "Worktypes",
    "keyColumnName": "NOID",
    "mode": "separator",
    "separator": "||",
    "regex": false,
    "description": "Split multi-valued cells in column Worktypes"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Subjects_653",
          "expression": "value",
          "columnName": "Subjects_653",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "Worktypes",
          "expression": "value",
          "columnName": "Worktypes",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "Worktypes",
    "expression": "grel:forEach(cross(cell,\"Event types Grid view April 2020\",\"Event_type\"),v,v.cells[\"Source\"].value).uniques().sort().join(', ')",
    "onError": "set-to-blank",
    "newColumnName": "Source",
    "columnInsertIndex": 23,
    "description": "Create column Source at index 23 based on column Worktypes using expression grel:forEach(cross(cell,\"Event types Grid view April 2020\",\"Event_type\"),v,v.cells[\"Source\"].value).uniques().sort().join(', ')"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Language_List",
          "expression": "value",
          "columnName": "Language_List",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "Series_Title",
          "expression": "value",
          "columnName": "Series_Title",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "NOID",
    "expression": "grel:forEach(cross(cell,\"noid runtimes_september2022\",\"Column 1\"),v,v.cells[\"Column 2\"].value).uniques().sort().join(', ')",
    "onError": "set-to-blank",
    "newColumnName": "Column 2",
    "columnInsertIndex": 1,
    "description": "Create column Column 2 at index 1 based on column NOID using expression grel:forEach(cross(cell,\"noid runtimes_september2022\",\"Column 1\"),v,v.cells[\"Column 2\"].value).uniques().sort().join(', ')"
  },
  {
    "op": "core/column-move",
    "columnName": "Column 2",
    "index": 16,
    "description": "Move column Column 2 to position 16"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 2",
    "guessCellType": false,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": ":",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Column 2 by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 2 3",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 2 3 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 2 3",
    "expression": "grel:value.round()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 2 3 using expression grel:value.round()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Column 2 1",
    "expression": "grel:toNumber(value) * 60",
    "onError": "set-to-blank",
    "newColumnName": "Hours_Converted",
    "columnInsertIndex": 17,
    "description": "Create column Hours_Converted at index 17 based on column Column 2 1 using expression grel:toNumber(value) * 60"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Column 2 2",
    "expression": "join ([coalesce(cells['Column 2 2'].value,''),coalesce(cells['Column 2 3'].value,'')],'.')",
    "onError": "keep-original",
    "newColumnName": "Minutes_Rounded",
    "columnInsertIndex": 19,
    "description": "Create column Minutes_Rounded at index 19 based on column Column 2 2 using expression join ([coalesce(cells['Column 2 2'].value,''),coalesce(cells['Column 2 3'].value,'')],'.')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Minutes_Rounded",
    "expression": "grel:value.toNumber().round()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Minutes_Rounded using expression grel:value.toNumber().round()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Hours_Converted",
    "expression": "grel:value+cells[\"Minutes_Rounded\"].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Hours_Converted using expression grel:value+cells[\"Minutes_Rounded\"].value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Hours_Converted",
    "expression": "grel:value.toString().replace(\".0\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Hours_Converted using expression grel:value.toString().replace(\".0\",\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Hours_Converted",
    "expression": "grel:\"000\"[0,3-value.length()] + value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Hours_Converted using expression grel:\"000\"[0,3-value.length()] + value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 2 1",
    "expression": "join ([coalesce(cells['Column 2 1'].value,''),coalesce(cells['Column 2 2'].value,''),coalesce(cells['Column 2 3'].value,'')],':')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 2 1 using expression join ([coalesce(cells['Column 2 1'].value,''),coalesce(cells['Column 2 2'].value,''),coalesce(cells['Column 2 3'].value,'')],':')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "Run_Time",
          "columnName": "Run_Time",
          "query": "01",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "Column 2 1",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 2 1 using expression value.trim()"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "NOID",
      "Alternate_Titles",
      "Artist_Bio",
      "Copyright_Contact",
      "Date_of_Production",
      "Format",
      "HI",
      "Language_List",
      "Language_Note",
      "Location_Venue",
      "Main_Production_Credits",
      "Meeting_Information",
      "Participants",
      "Publication_Cycle",
      "Rights_Holder",
      "Run_Time_Submitted",
      "Column 2 1",
      "Series_Title",
      "Subjects_650",
      "Subjects_653",
      "Summary",
      "Title",
      "Worktypes",
      "Year_of_Production",
      "Hours_Converted"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Column 2 1",
    "expression": "grel:value.replace(/(\\d+):(\\d+):(\\d+)/,\"$1 hr., $2 min., $3 sec.\").replace(/00 \\w+., /,\"\").replace(/^(0)(\\d)(.*)/,\"$2$3\").replace(/((0)(\\d)( min.))/,\"$3 min.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 2 1 using expression grel:value.replace(/(\\d+):(\\d+):(\\d+)/,\"$1 hr., $2 min., $3 sec.\").replace(/00 \\w+., /,\"\").replace(/^(0)(\\d)(.*)/,\"$2$3\").replace(/((0)(\\d)( min.))/,\"$3 min.\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Column 2 1",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Column 2 1 using expression value.trim()"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Column 2 1",
    "newColumnName": "Run_Time",
    "description": "Rename column Column 2 1 to Run_Time"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "NOID",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column NOID using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Alternate_Titles",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Alternate_Titles using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "HI",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column HI using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Date_of_Production",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Date_of_Production using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Format",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Format using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Copyright_Contact",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Copyright_Contact using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Artist_Bio",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Artist_Bio using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Main_Production_Credits",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Main_Production_Credits using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Location_Venue",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Location_Venue using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Language_Note",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language_Note using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Language_List",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Language_List using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Participants",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Participants using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Meeting_Information",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Meeting_Information using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Series_Title",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Series_Title using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Run_Time",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Run_Time using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Run_Time_Submitted",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Run_Time_Submitted using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Rights_Holder",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Rights_Holder using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Subjects_653",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subjects_653 using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Publication_Cycle",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Publication_Cycle using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Worktypes",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Worktypes using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Title",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Title using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Summary",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Summary using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Subjects_650",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Subjects_650 using expression value.replace(/\\s+/,' ')"
  }
]